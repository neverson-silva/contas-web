[{"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\index.tsx":"1","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\reportWebVitals.ts":"2","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\App.tsx":"3","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\home\\index.tsx":"4","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\home\\styles.ts":"5","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\api.ts":"6","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\login\\index.tsx":"7","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\login\\style.ts":"8","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\authentication.ts":"9","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\local-storage.ts":"10","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\Routes.tsx":"11"},{"size":489,"mtime":1609632761500,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":316,"mtime":1609632618915,"results":"15","hashOfConfig":"13"},{"size":1993,"mtime":1609633059427,"results":"16","hashOfConfig":"13"},{"size":147,"mtime":1609612542637,"results":"17","hashOfConfig":"13"},{"size":1546,"mtime":1609631563528,"results":"18","hashOfConfig":"13"},{"size":1241,"mtime":1609632936114,"results":"19","hashOfConfig":"13"},{"size":843,"mtime":1609628359670,"results":"20","hashOfConfig":"13"},{"size":1352,"mtime":1609631485608,"results":"21","hashOfConfig":"13"},{"size":467,"mtime":1609630576977,"results":"22","hashOfConfig":"13"},{"size":371,"mtime":1609632648258,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1nu7uhl",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\index.tsx",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <Routes />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["53","54"],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\reportWebVitals.ts",[],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\App.tsx",["55","56"],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\home\\index.tsx",["57"],"import React, { useEffect, useState } from 'react';\r\nimport ApiService from '../../services/api';\r\nimport { Container } from './styles';\r\n\r\nimport { Lancamento } from './types';\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    const [lancamentos, setLancamentos] = useState<Lancamento[]>([]); \r\n    const apiService = new ApiService();\r\n\r\n    useEffect(() => {\r\n  \r\n      (async () => {\r\n        const fetched = await apiService.get('/lancamentos');\r\n        setLancamentos(fetched.data.itens);\r\n      })();\r\n  \r\n    }, []);\r\n\r\n    return (<Container>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>Valor</th>\r\n                            <th>Data Compra</th>\r\n                            <th>Pertence Ã </th>\r\n                            <th>Forma de Pagamento</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        {lancamentos.map(lancamento => {\r\n                            return <tr key={Math.random()}>\r\n                                <td key={lancamento.id + lancamento.conta.nome}> {lancamento.conta.nome} </td>\r\n                                <td key={lancamento.id + lancamento.conta.valorUtilizado}> {lancamento.conta.valorUtilizado.toLocaleString('pt-BR')} </td>\r\n                                <td key={lancamento.id + lancamento.conta.pessoa.id}> {new Date(lancamento.conta.dataCompra).toLocaleDateString('pt-BR')} </td>\r\n                                <td key={lancamento.id + lancamento.conta.pessoa.nomeCompleto}> {lancamento.conta.pessoa.nomeCompleto} </td>\r\n                                <td key={lancamento.id + lancamento.conta.formaPagamento.nome}> {lancamento.conta.formaPagamento.nome} </td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n           </Container>);\r\n}\r\nexport default Home;","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\home\\styles.ts",[],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\api.ts",[],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\login\\index.tsx",["58","59","60","61"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthenticationService } from '../../services/authentication';\r\nimport { Container, Form, Input, Title, Button } from './style';\r\n\r\nconst Login: React.FC = () => {\r\n\r\n    const [status, setStatus] = useState(null);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [conta, setConta] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const history = useHistory();\r\n\r\n    const authService = new AuthenticationService();\r\n\r\n    async function handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        await authService.login(conta, senha);\r\n        history.push('/home');\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Form method='post'>\r\n                <Title>Login</Title>\r\n                <Input name='conta' onChange={(e) => setConta(e.target.value)} type='email' placeholder='Email'/>\r\n                <Input name='senha' onChange={(e) => setSenha(e.target.value)} type='password' placeholder='Senha'/>\r\n                <Button onClick={(e) => handleSubmit(e)}>Entrar</Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\pages\\login\\style.ts",[],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\authentication.ts",["62"],"import { LocalStorageService } from './local-storage';\r\nimport  ApiService from './api';\r\n\r\nexport class AuthenticationService {\r\n\r\n    private readonly LOGIN_URL: string = '/auth/login';\r\n    private readonly REFRESH_URL: string = '/auth/refreshToken';\r\n\r\n\r\n    private readonly api: ApiService = new ApiService();\r\n    private readonly localStorage: LocalStorageService = new LocalStorageService();\r\n\r\n\r\n    async login(email: string, senha: string) {\r\n        \r\n        try {\r\n            const token = await this.api.post(this.LOGIN_URL, {email, senha});\r\n            \r\n            this.localStorage.setItem('token', token.data.token);\r\n            this.localStorage.setItem('logado', true);\r\n\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    async refreshToken() {\r\n        const token = this.localStorage.getItem('token');\r\n        \r\n        try {\r\n            const newToken = await this.api.post(this.REFRESH_URL);\r\n            this.localStorage.setItem('token', newToken.data.token);\r\n            this.localStorage.setItem('logado', true);\r\n        }catch(e) {\r\n            this.logout();\r\n        }\r\n\r\n    }\r\n\r\n    logout() {\r\n        this.localStorage.deleteItem('token');\r\n        this.localStorage.setItem('logado', false);\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.localStorage.isLoggedIn();\r\n    }\r\n}","C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\services\\local-storage.ts",[],["63","64"],"C:\\Users\\Neverson Silva\\Documents\\workspace\\contas\\gestao-web\\src\\Routes.tsx",[],{"ruleId":"65","severity":1,"message":"66","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":11},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":15},{"ruleId":"65","severity":1,"message":"74","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":19,"column":8,"nodeType":"77","endLine":19,"endColumn":10,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":9,"column":12,"nodeType":"67","messageId":"68","endLine":9,"endColumn":18},{"ruleId":"65","severity":1,"message":"80","line":9,"column":20,"nodeType":"67","messageId":"68","endLine":9,"endColumn":29},{"ruleId":"65","severity":1,"message":"81","line":10,"column":12,"nodeType":"67","messageId":"68","endLine":10,"endColumn":22},{"ruleId":"65","severity":1,"message":"82","line":10,"column":24,"nodeType":"67","messageId":"68","endLine":10,"endColumn":37},{"ruleId":"65","severity":1,"message":"83","line":28,"column":15,"nodeType":"67","messageId":"68","endLine":28,"endColumn":20},{"ruleId":"69","replacedBy":"84"},{"ruleId":"71","replacedBy":"85"},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'Route' is defined but never used.","'Home' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiService'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'submitting' is assigned a value but never used.","'setSubmitting' is assigned a value but never used.","'token' is assigned a value but never used.",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [apiService]",{"range":"91","text":"92"},[512,514],"[apiService]"]